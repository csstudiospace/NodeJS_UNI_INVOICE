//===============================================================================
//變數 a 為數字，值為123
var a=123;
console.log("a:"+a+",type:"+(typeof a)+", NaN:"+isNaN(a)); //a:123,type:number, NaN:false
//===============================================================================
//變數 b 為字串，值為 hello
var b="hello";
console.log("b:"+b+",type:"+(typeof b)+", NaN:"+isNaN(b)); //b:hello,type:string, NaN:true
//===============================================================================
var c=4; var d=5;
var e=c+d;
console.log("e:"+e); // e:9
//===============================================================================
var f=6; var g="you";
var h=f+g;
console.log("h:"+h); // h:6you
//===============================================================================
var i="world"; var j=" hello";
var k=i+j;
console.log("k:"+k); // k:world hello
//===============================================================================
var m=567; var n="567";
if(m==n){
	console.log("match");     //match, 因為 == 會自動幫你轉換資料型態
}
else{
	console.log("not match");
}
//===============================================================================
var o=888; var p="888";
if(o===p){
	console.log("match");
}
else{
	console.log("not match");  //not match, 因為 === 不會自動幫你轉換資料型態
}
//===============================================================================
var q=[123 , 456 , 789]; var r=["111","222","333"];
console.log(q); //[ 123, 456, 789 ]
console.log(r); //[ '111', '222', '333' ]
console.log("q[2]:"+q[2]); //q[2]:789
console.log("r[1]:"+r[1]); //r[1]:222
//===============================================================================
var s = {
	member:111,
	member2:"222"
}
console.log("s:"+s); //s:[object Object]
console.log(s);      //{ member: 111, member2: '222' }


